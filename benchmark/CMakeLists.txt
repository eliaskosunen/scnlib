find_package(benchmark QUIET)

add_executable(bench
    bench.cpp benchmark.h
    bench_int.cpp bench_word.cpp bench_float.cpp
    bench_return.cpp bench_list.cpp)

if (NOT benchmark_FOUND)
    message(STATUS "Installing Google benchmark submodule")
    execute_process(COMMAND git submodule update --init -- google-benchmark
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

    set(BENCHMARK_ENABLE_TESTING OFF CACHE INTERNAL "")
    set(BENCHMARK_ENABLE_INSTALL OFF CACHE INTERNAL "")
    set(BENCHMARK_DOWNLOAD_DEPENDENCIES ON CACHE INTERNAL "")
    set(BENCHMARK_ENABLE_GTEST_TESTS OFF CACHE INTERNAL "")

    add_subdirectory(google-benchmark EXCLUDE_FROM_ALL)
endif()

if (SCN_USE_32BIT)
    target_compile_options(benchmark PUBLIC -m32)
    set_target_properties(benchmark PROPERTIES LINK_FLAGS -m32)
endif ()

target_link_libraries(bench scn-header-only benchmark)
set_private_flags(bench)
target_compile_features(bench PRIVATE cxx_std_17)

if (SCN_BLOAT)
    add_subdirectory(bloat)
endif ()
